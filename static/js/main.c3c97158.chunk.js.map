{"version":3,"sources":["assets/logo.svg","pages/Home/index.jsx","services/api.js","components/Dropzone/index.jsx","pages/CreatePoint/index.jsx","pages/routes.jsx","App.js","index.js"],"names":["module","exports","Home","props","id","className","src","logo","alt","to","api","axios","create","baseURL","Dropzone","onFileUploaded","useState","selectedFileUrl","setSelectedFileUrl","onDrop","useCallback","acceptedFiles","file","fileUrl","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","isDragActive","CreatePoint","items","setItems","selectedItems","setSelectedItems","ufs","setUfs","cities","setCities","selectedUf","setSelectedUf","selectedCity","setSelectedCity","initialPosition","setInitialPosition","selectedPosition","setSelectedPosition","name","email","whatsapp","formData","setFormData","selectedFile","setSelectedFile","history","useHistory","useEffect","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","get","then","response","data","ufInitials","map","uf","sigla","citiesNames","city","nome","onInputChangeHandler","event","target","value","a","preventDefault","FormData","append","join","post","alert","push","onSubmit","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","key","item","includes","itemId","findIndex","filteredItems","filter","onSelectItemsHandler","image_url","title","Routes","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3c97158.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react'\r\nimport {FiLogIn} from 'react-icons/fi'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './styles.css'\r\n\r\nimport logo from '../../assets/logo.svg'\r\n\r\nconst Home = props => {\r\n    return (\r\n        <div id=\"page-home\">\r\n            <div className=\"content\">\r\n                <header>\r\n                    <img src={logo} alt=\"Ecoleta\" />\r\n                </header>\r\n                <main>\r\n                    <h1>Seu marketplace de coleta de res√≠duos.</h1>\r\n                    <p>Ajudamos pessoas a encontrar pontos de coleta de forma eficiente.</p>\r\n                    <Link to=\"/create-point\">\r\n                        <span>\r\n                            <FiLogIn />                           \r\n                        </span>\r\n                        <strong>\r\n                            Cadastre um ponto de coleta\r\n                        </strong>\r\n                    </Link>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3333'\r\n})\r\n\r\nexport default api","import React, { useCallback, useState } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { FiUpload } from 'react-icons/fi'\r\nimport './styles.css'\r\n\r\nfunction Dropzone(props) {\r\n\r\n    const {onFileUploaded} = props\r\n    const [selectedFileUrl, setSelectedFileUrl] = useState('')\r\n\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        // Do something with the files\r\n        const file = acceptedFiles[0]\r\n\r\n        const fileUrl = URL.createObjectURL(file)\r\n\r\n        setSelectedFileUrl(fileUrl)\r\n        onFileUploaded(file)\r\n\r\n    }, [onFileUploaded])\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: 'image/*'\r\n    })\r\n\r\n    return (\r\n        <div className='dropzone' {...getRootProps()}>\r\n            <input {...getInputProps()} accept=\"image/*\" />\r\n            {/* {\r\n        isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n      } */}\r\n\r\n            {\r\n                selectedFileUrl\r\n                    ? <img src={selectedFileUrl} alt=\"Point thumbnail\" />\r\n                    : (\r\n                        <p>\r\n                            <FiUpload />\r\n                            Imagem do estabelecimento.\r\n                        </p>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropzone","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\n//import {LeafletMouseEvent} from 'leaflet'\r\nimport {\r\n    Map,\r\n    TileLayer,\r\n    Marker,\r\n    Popup,\r\n\r\n} from 'react-leaflet'\r\nimport axios from 'axios'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport './styles.css'\r\nimport logo from '../../assets/logo.svg'\r\n\r\nimport Dropzone from '../../components/Dropzone'\r\n\r\n\r\nconst CreatePoint = () => {\r\n    const [items, setItems] = useState([])\r\n    const [selectedItems, setSelectedItems] = useState([])\r\n    const [ufs, setUfs] = useState([])\r\n    const [cities, setCities] = useState([])\r\n    const [selectedUf, setSelectedUf] = useState('0')\r\n    const [selectedCity, setSelectedCity] = useState('0')\r\n    const [initialPosition, setInitialPosition] = useState([0, 0])\r\n    const [selectedPosition, setSelectedPosition] = useState()\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: ''\r\n    })\r\n    const [selectedFile, setSelectedFile] = useState()\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            console.log(position)\r\n            const { latitude, longitude } = position.coords\r\n            setInitialPosition([latitude, longitude])\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        api.get('items').then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }, [items])\r\n\r\n    useEffect(() => {\r\n        axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\r\n            .then(response => {\r\n                const ufInitials = response.data.map(uf => uf.sigla)\r\n                console.log(ufInitials)\r\n                setUfs(ufInitials)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (selectedUf === \"0\") {\r\n            return\r\n        }\r\n\r\n        axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n            .then(response => {\r\n                const citiesNames = response.data.map(city => city.nome)\r\n                setCities(citiesNames)\r\n            })\r\n\r\n    }, [selectedUf])\r\n\r\n    const onInputChangeHandler = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.name]: event.target.value\r\n\r\n        })\r\n    }\r\n\r\n    const onSelectUFHandler = (event) => {\r\n        const uf = event.target.value\r\n        console.log(uf)\r\n        setSelectedUf(uf)\r\n    }\r\n\r\n    const onSelectCityHandler = (event) => {\r\n        const city = event.target.value\r\n        console.log(city)\r\n        setSelectedCity(city)\r\n    }\r\n\r\n    const onClickMapHandler = (event) => {\r\n        console.log(event.latlng)\r\n        setSelectedPosition([event.latlng.lat, event.latlng.lng])\r\n    }\r\n\r\n    const onSelectItemsHandler = (itemId) => {\r\n        const alreadySelected = selectedItems.findIndex(item => item === itemId)\r\n\r\n        if (alreadySelected >= 0) {\r\n            const filteredItems = selectedItems.filter(item => item !== itemId)\r\n\r\n            setSelectedItems(filteredItems)\r\n        } else {\r\n            setSelectedItems([...selectedItems, itemId])\r\n        }\r\n\r\n    }\r\n\r\n    async function onSubmitHandler(event) {\r\n        event.preventDefault()\r\n\r\n        console.log(selectedFile)\r\n\r\n        console.log(event.target)\r\n        const { name, email, whatsapp, } = formData\r\n        const uf = selectedUf\r\n        const city = selectedCity\r\n        const [latitude, longitude] = selectedPosition\r\n        const items = selectedItems\r\n\r\n        const data = new FormData()\r\n\r\n        data.append('name', name)\r\n        data.append('email', email)\r\n        data.append('whatsapp', whatsapp)\r\n        data.append('uf', uf)\r\n        data.append('city', city)\r\n        data.append('latitude', latitude)\r\n        data.append('longitude', longitude)\r\n        data.append('items', items.join(','))\r\n\r\n        if (selectedFile) {\r\n            data.append('image', selectedFile)\r\n        }\r\n        // const data = {\r\n        //     name,\r\n        //     email,\r\n        //     whatsapp,\r\n        //     uf,\r\n        //     city,\r\n        //     latitude,\r\n        //     longitude,\r\n        //     items\r\n        // }\r\n\r\n        await api.post('points', data)\r\n\r\n        alert('Ponto de coleta salvo com sucesso!')\r\n\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div id='page-create-point'>\r\n            <header>\r\n                <img src={logo} alt=\"Ecoleta\" />\r\n                <Link to=\"/\">\r\n                    <FiArrowLeft /> Voltar para home\r\n                </Link>\r\n            </header>\r\n            <form onSubmit={onSubmitHandler}>\r\n                <h1>Cadastro do ponto de coleta</h1>\r\n\r\n                <Dropzone onFileUploaded={setSelectedFile} />\r\n\r\n                <fieldset>\r\n                    <legend><h2>Dados</h2></legend>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da entidade</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            onChange={onInputChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                onChange={onInputChangeHandler}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"whatsapp\"\r\n                                id=\"whatsapp\"\r\n                                onChange={onInputChangeHandler}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Endere√ßo</h2>\r\n                        <span>Selecione um endere√ßo no mapa</span>\r\n                    </legend>\r\n\r\n                    <Map\r\n                        center={initialPosition}\r\n                        zoom={15}\r\n                        onClick={onClickMapHandler}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={selectedPosition ? selectedPosition : initialPosition} />\r\n                    </Map>\r\n\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado (UF)</label>\r\n\r\n                            <select\r\n                                name=\"uf\"\r\n                                id=\"uf\"\r\n                                onChange={onSelectUFHandler}\r\n                                value={selectedUf}>\r\n                                <option value=\"0\">Selecione uma UF</option>\r\n                                {ufs.map(uf => (\r\n                                    <option key={uf} value={uf}>{uf}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"city\">Cidade</label>\r\n                            <select\r\n                                value={selectedCity}\r\n                                name=\"city\"\r\n                                id=\"city\"\r\n                                onChange={onSelectCityHandler} >\r\n\r\n                                <option value=\"\">Selecione uma cidade</option>\r\n                                {cities.map(city => (\r\n                                    <option key={city} value={city}>{city}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Items de coleta</h2>\r\n                        <span>Selecione um ou mais itens abaixo</span>\r\n                    </legend>\r\n\r\n                    <ul className=\"items-grid\">\r\n\r\n                        {items.map(item => (\r\n                            <li\r\n                                className={selectedItems.includes(item.id) ? 'selected' : ''}\r\n                                key={item.id} onClick={() => onSelectItemsHandler(item.id)}>\r\n                                <img src={item.image_url} alt={item.title} />\r\n                                <span>{item.title}</span>\r\n                            </li>\r\n                        )\r\n                        )\r\n                        }\r\n\r\n\r\n                    </ul>\r\n                </fieldset>\r\n\r\n                <button type=\"submit\">\r\n                    Cadastrar ponto de coleta\r\n                </button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePoint","import React from 'react'\r\nimport {Route, BrowserRouter as Router} from 'react-router-dom'\r\n\r\nimport Home from './Home'\r\nimport CreatePoint from './CreatePoint'\r\n\r\nconst Routes = props => {\r\n\r\n    return (\r\n        <Router>\r\n            <Route exact path='/' component={Home}/>\r\n            <Route path='/create-point' component={CreatePoint} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Routes","import React,{useState} from 'react';\nimport './App.css';\n\n// import Home from './pages/Home'\n// import CreatePoint from  './pages/CreatePoint'\nimport Routes from './pages/routes'\nfunction App() {\n  return (\n    <Routes /> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}